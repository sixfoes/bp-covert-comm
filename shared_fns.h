#define __USE_GNU
#define _GNU_SOURCE

#include <sched.h>
#include <pthread.h>

#define SIGNALING_PROCESSOR 2
#define CONTROL_PROCESSOR 0

void alwaysTaken() {
  __asm__ (
  "clc; clc; clc;"
  "clc; clc; clc;"
  "mov eax, 10;"
  "cmp eax, 15;"
  "jne lo0;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo0: jne lo1;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo1: jne lo2;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo2: jne lo3;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo3: jne lo4;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo4: jne lo5;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo5: jne lo6;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo6: jne lo7;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo7: jne lo8;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo8: jne lo9;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo9: jne lo10;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo10: jne lo11;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo11: jne lo12;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo12: jne lo13;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo13: jne lo14;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo14: jne lo15;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo15: jne lo16;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo16: jne lo17;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo17: jne lo18;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo18: jne lo19;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo19: jne lo20;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo20: jne lo21;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo21: jne lo22;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo22: jne lo23;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo23: jne lo24;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo24: jne lo25;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo25: jne lo26;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo26: jne lo27;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo27: jne lo28;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo28: jne lo29;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo29: jne lo30;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo30: jne lo31;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo31: jne lo32;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo32: jne lo33;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo33: jne lo34;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo34: jne lo35;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo35: jne lo36;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo36: jne lo37;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo37: jne lo38;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo38: jne lo39;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo39: jne lo40;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo40: jne lo41;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo41: jne lo42;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo42: jne lo43;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo43: jne lo44;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo44: jne lo45;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo45: jne lo46;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo46: jne lo47;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo47: jne lo48;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo48: jne lo49;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo49: jne lo50;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo50: jne lo51;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo51: jne lo52;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo52: jne lo53;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo53: jne lo54;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo54: jne lo55;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo55: jne lo56;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo56: jne lo57;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo57: jne lo58;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo58: jne lo59;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo59: jne lo60;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo60: jne lo61;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo61: jne lo62;"
  "mov eax, 10;"
  "clc; clc; clc;"
  "lo62: clc;"
  );
}

void alwaysNotTaken() {
  __asm__ (
    "clc; clc; clc;"
    "clc; clc; clc;"
    "mov eax, 10;"
    "cmp eax, 15;"
    "je l0;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l0: je l1;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l1: je l2;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l2: je l3;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l3: je l4;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l4: je l5;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l5: je l6;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l6: je l7;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l7: je l8;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l8: je l9;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l9: je l10;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l10: je l11;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l11: je l12;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l12: je l13;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l13: je l14;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l14: je l15;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l15: je l16;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l16: je l17;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l17: je l18;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l18: je l19;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l19: je l20;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l20: je l21;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l21: je l22;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l22: je l23;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l23: je l24;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l24: je l25;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l25: je l26;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l26: je l27;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l27: je l28;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l28: je l29;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l29: je l30;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l30: je l31;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l31: je l32;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l32: je l33;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l33: je l34;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l34: je l35;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l35: je l36;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l36: je l37;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l37: je l38;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l38: je l39;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l39: je l40;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l40: je l41;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l41: je l42;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l42: je l43;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l43: je l44;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l44: je l45;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l45: je l46;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l46: je l47;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l47: je l48;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l48: je l49;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l49: je l50;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l50: je l51;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l51: je l52;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l52: je l53;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l53: je l54;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l54: je l55;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l55: je l56;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l56: je l57;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l57: je l58;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l58: je l59;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l59: je l60;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l60: je l61;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l61: je l62;"
    "mov eax, 10;"
    "clc; clc; clc;"
    "l62: clc;"
    );
}

const char *byte_to_binary(int x) {
    static char b[9];
    b[0] = '\0';

    int z;
    for (z = 128; z > 0; z >>= 1) {
        strcat(b, ((x & z) == z) ? "1" : "0");
    }

    return b;
}
